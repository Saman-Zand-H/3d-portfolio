/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Bastien Genbrugge (https://sketchfab.com/bastienBGR)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/ship-in-clouds-c475323dc7f24e26ba2009c08c8e1941
Title: Ship in Clouds
*/

import * as THREE from 'three';
import SkyScene from '../assets/3d/sky/scene.glb';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { useRef } from 'react';
import { useFrame } from '@react-three/fiber';

type GLTFResult = GLTF & {
  nodes: {
    Sky_Mat_0: THREE.Mesh;
    Boot_Finaal_1_Boot_Finaal_0: THREE.Mesh;
    Cloud_Poly_Poly_0: THREE.Mesh;
    Cloud_1_Cloud_1_0: THREE.Mesh;
    Cloud_2_Cloud_2_0: THREE.Mesh;
    Cloud_3_Cloud_3_0: THREE.Mesh;
  };
  materials: {
    material: THREE.MeshStandardMaterial;
    Boot_Finaal: THREE.MeshStandardMaterial;
    Poly: THREE.MeshStandardMaterial;
    Cloud_1: THREE.MeshStandardMaterial;
    Cloud_2: THREE.MeshStandardMaterial;
    Cloud_3: THREE.MeshStandardMaterial;
  };
};

type SkyProps = JSX.IntrinsicElements['group'] & {
  isRotating: boolean;
};

export function Sky(props: SkyProps) {
  const { nodes, materials } = useGLTF(SkyScene) as GLTFResult;
  const skyRef = useRef<THREE.Group>(null);
  const { isRotating } = props;

  useFrame((_, delta) => {
    if (isRotating) {
      skyRef.current!.rotation.y += 0.09 * delta;
    }
  });

  return (
    <group {...props} dispose={null} ref={skyRef}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.003428}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Sky_Mat_0.geometry}
            material={materials.material}
            position={[51.636589, 0, -817.579346]}
            rotation={[0, -Math.PI / 2, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cloud_Poly_Poly_0.geometry}
            material={materials.Poly}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cloud_1_Cloud_1_0.geometry}
            material={materials.Cloud_1}
            position={[-102.341545, -152.023361, -1209.989868]}
            rotation={[1.917354, 0.432806, 0.910673]}
            scale={1.5}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cloud_2_Cloud_2_0.geometry}
            material={materials.Cloud_2}
            position={[333.051697, -63.933231, -1541.73291]}
            rotation={[-2.900951, 0.214413, -1.167082]}
            scale={1.5}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cloud_3_Cloud_3_0.geometry}
            material={materials.Cloud_3}
            position={[339.374664, -70.968239, -1571.745361]}
            rotation={[2.89198, -1.307902, 3.083292]}
            scale={1.188777}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(SkyScene);
